@a = dso_local global i32 0
@b = dso_local global i32 0
@c = dso_local global i32 0
@d = dso_local global i32 0
@e = dso_local global i32 0
@i = dso_local global i32 0

declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)
define i32 @func0(i32 %_0, i32 %_1) {
Function_func0_BasicBlock_2:
	%_3 = alloca i32
	store i32 %_0, i32* %_3
	%_4 = alloca i32
	store i32 %_1, i32* %_4
	%_5 = alloca i32
	store i32 0, i32* %_5
	%_6 = alloca i32
	store i32 128, i32* %_6
	%_7 = load i32, i32* %_3
	%_8 = load i32, i32* %_4
	%_9 = add i32 %_7, %_8
	%_10 = load i32, i32* %_6
	%_11 = srem i32 %_9, %_10
	ret i32 %_11
}
define i32 @func1(i32 %_0) {
Function_func1_BasicBlock_1:
	%_2 = alloca i32
	store i32 %_0, i32* %_2
	%_3 = load i32, i32* @i
	%_4 = add i32 %_3, 1
	store i32 %_4, i32* @i
	%_5 = load i32, i32* @i
	ret i32 %_5
}
define i32 @func2(i32 %_0, i32 %_1) {
Function_func2_BasicBlock_2:
	%_3 = alloca i32
	store i32 %_0, i32* %_3
	%_4 = alloca i32
	store i32 %_1, i32* %_4
	%_7 = load i32, i32* %_3
	%_8 = load i32, i32* %_4
	%_9 = srem i32 %_7, %_8
	%_10 = icmp eq i32 %_9, 0
	br i1 %_10, label %Function_func2_BasicBlock_5, label %Function_func2_BasicBlock_6
Function_func2_BasicBlock_5:
	ret i32 1
Function_func2_BasicBlock_6:
	ret i32 0
}
define i32 @func3() {
Function_func3_BasicBlock_0:
	%_1 = load i32, i32* @i
	call void @putch(i32 103)
	call void @putch(i32 108)
	call void @putch(i32 111)
	call void @putch(i32 95)
	call void @putch(i32 105)
	call void @putch(i32 32)
	call void @putch(i32 61)
	call void @putch(i32 32)
	call void @putint(i32 %_1)
	call void @putch(i32 10)
	%_2 = alloca i32
	%_3 = alloca i32
	%_4 = alloca i32
	%_5 = alloca i32
	%_6 = alloca i32
	%_7 = alloca i32
	store i32 1906, i32* %_7
	br label %Function_func3_BasicBlock_8
Function_func3_BasicBlock_8:
	%_12 = load i32, i32* @i
	%_13 = icmp slt i32 %_12, 10000
	br i1 %_13, label %Function_func3_BasicBlock_9, label %Function_func3_BasicBlock_11
Function_func3_BasicBlock_9:
	%_14 = alloca i32
	%_15 = load i32, i32* @a
	%_16 = mul i32 %_15, 4
	%_17 = mul i32 %_16, 32
	%_18 = load i32, i32* @a
	%_19 = mul i32 %_17, %_18
	%_20 = load i32, i32* @a
	%_21 = sdiv i32 %_19, %_20
	%_22 = sdiv i32 %_21, 32
	store i32 %_22, i32* %_14
	%_23 = load i32, i32* @b
	%_24 = load i32, i32* %_14
	%_25 = call i32 @func0(i32 %_23, i32 %_24)
	store i32 %_25, i32* @b
	%_26 = load i32, i32* @a
	%_27 = mul i32 %_26, 4
	%_28 = load i32, i32* @b
	%_29 = add i32 %_27, %_28
	%_30 = load i32, i32* @c
	%_31 = add i32 %_29, %_30
	store i32 %_31, i32* %_2
	%_32 = load i32, i32* @a
	%_33 = mul i32 %_32, 4
	%_34 = load i32, i32* @b
	%_35 = add i32 %_33, %_34
	%_36 = load i32, i32* @c
	%_37 = add i32 %_35, %_36
	%_38 = load i32, i32* @d
	%_39 = add i32 %_37, %_38
	store i32 %_39, i32* %_3
	%_40 = load i32, i32* @a
	%_41 = mul i32 %_40, 4
	%_42 = load i32, i32* @b
	%_43 = add i32 %_41, %_42
	%_44 = load i32, i32* @c
	%_45 = add i32 %_43, %_44
	%_46 = load i32, i32* @d
	%_47 = add i32 %_45, %_46
	%_48 = load i32, i32* @e
	%_49 = add i32 %_47, %_48
	store i32 %_49, i32* %_4
	%_50 = load i32, i32* @a
	%_51 = mul i32 %_50, 4
	%_52 = load i32, i32* @b
	%_53 = add i32 %_51, %_52
	%_54 = load i32, i32* @c
	%_55 = add i32 %_53, %_54
	%_56 = load i32, i32* @d
	%_57 = add i32 %_55, %_56
	%_58 = load i32, i32* @e
	%_59 = add i32 %_57, %_58
	store i32 %_59, i32* %_5
	%_60 = load i32, i32* @a
	%_61 = mul i32 %_60, 4
	%_62 = load i32, i32* @b
	%_63 = add i32 %_61, %_62
	%_64 = load i32, i32* @c
	%_65 = add i32 %_63, %_64
	%_66 = load i32, i32* @d
	%_67 = add i32 %_65, %_66
	%_68 = load i32, i32* @e
	%_69 = add i32 %_67, %_68
	store i32 %_69, i32* %_6
	%_72 = load i32, i32* @i
	%_73 = call i32 @func2(i32 %_72, i32 1000)
	%_74 = icmp ne i32 %_73, 0
	br i1 %_74, label %Function_func3_BasicBlock_70, label %Function_func3_BasicBlock_71
Function_func3_BasicBlock_10:
	br label %Function_func3_BasicBlock_8
Function_func3_BasicBlock_11:
	%_86 = load i32, i32* %_2
	%_87 = load i32, i32* %_3
	%_88 = add i32 %_86, %_87
	%_89 = load i32, i32* %_4
	%_90 = add i32 %_88, %_89
	%_91 = load i32, i32* %_5
	%_92 = add i32 %_90, %_91
	%_93 = load i32, i32* %_6
	%_94 = add i32 %_92, %_93
	ret i32 %_94
Function_func3_BasicBlock_70:
	%_75 = load i32, i32* %_2
	%_76 = load i32, i32* %_3
	%_77 = add i32 %_75, %_76
	%_78 = load i32, i32* %_4
	%_79 = add i32 %_77, %_78
	%_80 = load i32, i32* %_5
	%_81 = add i32 %_79, %_80
	%_82 = load i32, i32* %_6
	%_83 = add i32 %_81, %_82
	call void @putch(i32 115)
	call void @putch(i32 117)
	call void @putch(i32 109)
	call void @putch(i32 32)
	call void @putch(i32 61)
	call void @putch(i32 32)
	call void @putint(i32 %_83)
	call void @putch(i32 10)
	br label %Function_func3_BasicBlock_71
Function_func3_BasicBlock_71:
	%_84 = load i32, i32* @i
	%_85 = call i32 @func1(i32 %_84)
	br label %Function_func3_BasicBlock_10
}
define i32 @main() {
Function_main_BasicBlock_0:
	%_1 = alloca i32
	store i32 0, i32* %_1
	%_2 = call i32 @getint()
	store i32 %_2, i32* @a
	%_3 = call i32 @getint()
	store i32 %_3, i32* @b
	%_4 = call i32 @getint()
	store i32 %_4, i32* @c
	%_5 = call i32 @getint()
	store i32 %_5, i32* @d
	%_6 = call i32 @getint()
	store i32 %_6, i32* @e
	%_7 = call i32 @getint()
	store i32 %_7, i32* %_1
	%_8 = load i32, i32* %_1
	call void @putch(i32 109)
	call void @putch(i32 97)
	call void @putch(i32 105)
	call void @putch(i32 110)
	call void @putch(i32 95)
	call void @putch(i32 105)
	call void @putch(i32 32)
	call void @putch(i32 61)
	call void @putch(i32 32)
	call void @putint(i32 %_8)
	call void @putch(i32 10)
	%_9 = call i32 @func3()
	call void @putint(i32 %_9)
	call void @putch(i32 10)
	ret i32 0
}
