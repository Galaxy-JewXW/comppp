@a0 = dso_local constant i32 0

declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)
define void @f() {
Function_f_BasicBlock_0:
	ret void
}
define void @ff(i32 %_0, i32 %_1, i32 %_2) {
Function_ff_BasicBlock_3:
	%_4 = alloca i32
	store i32 %_0, i32* %_4
	%_5 = alloca i32
	store i32 %_1, i32* %_5
	%_6 = alloca i32
	store i32 %_2, i32* %_6
	%_7 = load i32, i32* %_6
	%_8 = add i32 %_7, 1
	store i32 %_8, i32* %_6
	ret void
}
define i32 @fd(i32 %_0) {
Function_fd_BasicBlock_1:
	%_2 = alloca i32
	store i32 %_0, i32* %_2
	%_3 = load i32, i32* %_2
	ret i32 %_3
}
define i32 @fk(i32 %_0, i32* %_1, [2 x i32]* %_2) {
Function_fk_BasicBlock_3:
	%_4 = alloca i32
	store i32 %_0, i32* %_4
	%_5 = alloca i32*
	store i32* %_1, i32** %_5
	%_6 = alloca [2 x i32]*
	store [2 x i32]* %_2, [2 x i32]** %_6
	ret i32 1
}
define i32 @main() {
Function_main_BasicBlock_0:
	call void @putch(i32 50)
	call void @putch(i32 49)
	call void @putch(i32 51)
	call void @putch(i32 55)
	call void @putch(i32 49)
	call void @putch(i32 48)
	call void @putch(i32 54)
	call void @putch(i32 52)
	call void @putch(i32 10)
	%_1 = load i32, i32* @a0
	call void @putch(i32 104)
	call void @putch(i32 101)
	call void @putch(i32 105)
	call void @putch(i32 104)
	call void @putch(i32 101)
	call void @putch(i32 105)
	call void @putint(i32 %_1)
	call void @putch(i32 10)
	call void @putint(i32 8)
	call void @putch(i32 10)
	call void @putch(i32 65)
	call void @putch(i32 67)
	call void @putch(i32 10)
	call void @putch(i32 87)
	call void @putch(i32 65)
	call void @putch(i32 10)
	call void @putch(i32 84)
	call void @putch(i32 76)
	call void @putch(i32 69)
	call void @putch(i32 10)
	call void @putch(i32 82)
	call void @putch(i32 69)
	call void @putch(i32 10)
	call void @putch(i32 80)
	call void @putch(i32 69)
	call void @putch(i32 10)
	call void @putch(i32 65)
	call void @putch(i32 75)
	call void @putch(i32 33)
	call void @putch(i32 33)
	call void @putch(i32 10)
	%_2 = alloca i32
	store i32 1, i32* %_2
	%_5 = load i32, i32* @a0
	%_6 = load i32, i32* %_2
	%_7 = icmp slt i32 %_5, %_6
	br i1 %_7, label %Function_main_BasicBlock_3, label %Function_main_BasicBlock_4
Function_main_BasicBlock_3:
	store i32 1, i32* %_2
	br label %Function_main_BasicBlock_4
Function_main_BasicBlock_4:
	%_11 = load i32, i32* @a0
	%_12 = load i32, i32* %_2
	%_13 = icmp sgt i32 %_11, %_12
	br i1 %_13, label %Function_main_BasicBlock_8, label %Function_main_BasicBlock_9
Function_main_BasicBlock_8:
	store i32 1, i32* %_2
	br label %Function_main_BasicBlock_10
Function_main_BasicBlock_9:
	store i32 1, i32* %_2
	br label %Function_main_BasicBlock_10
Function_main_BasicBlock_10:
	%_16 = load i32, i32* @a0
	%_17 = load i32, i32* %_2
	%_18 = icmp eq i32 %_16, %_17
	br i1 %_18, label %Function_main_BasicBlock_14, label %Function_main_BasicBlock_15
Function_main_BasicBlock_14:
	%_19 = mul i32 3, 4
	store i32 %_19, i32* %_2
	br label %Function_main_BasicBlock_15
Function_main_BasicBlock_15:
	%_22 = load i32, i32* %_2
	%_23 = icmp eq i32 0, %_22
	%_25 = zext i1 %_23 to i32
	%_24 = icmp ne i32 %_25, 0
	br i1 %_24, label %Function_main_BasicBlock_20, label %Function_main_BasicBlock_21
Function_main_BasicBlock_20:
	%_26 = sub i32 3, 4
	%_27 = add i32 %_26, 5
	store i32 %_27, i32* %_2
	br label %Function_main_BasicBlock_21
Function_main_BasicBlock_21:
	%_30 = load i32, i32* @a0
	%_31 = load i32, i32* %_2
	%_32 = icmp sge i32 %_30, %_31
	br i1 %_32, label %Function_main_BasicBlock_28, label %Function_main_BasicBlock_29
Function_main_BasicBlock_28:
	store i32 9, i32* %_2
	br label %Function_main_BasicBlock_29
Function_main_BasicBlock_29:
	%_35 = load i32, i32* @a0
	%_36 = load i32, i32* %_2
	%_37 = icmp sle i32 %_35, %_36
	br i1 %_37, label %Function_main_BasicBlock_33, label %Function_main_BasicBlock_34
Function_main_BasicBlock_33:
	store i32 10, i32* %_2
	br label %Function_main_BasicBlock_34
Function_main_BasicBlock_34:
	br label %Function_main_BasicBlock_38
Function_main_BasicBlock_38:
	%_42 = load i32, i32* @a0
	%_43 = load i32, i32* %_2
	%_44 = icmp sge i32 %_42, %_43
	br i1 %_44, label %Function_main_BasicBlock_39, label %Function_main_BasicBlock_41
Function_main_BasicBlock_39:
	%_47 = load i32, i32* %_2
	%_48 = icmp eq i32 %_47, 4
	br i1 %_48, label %Function_main_BasicBlock_45, label %Function_main_BasicBlock_46
Function_main_BasicBlock_40:
	br label %Function_main_BasicBlock_38
Function_main_BasicBlock_41:
	%_49 = sdiv i32 3, 5
	store i32 %_49, i32* %_2
	%_50 = load i32, i32* %_2
	%_51 = srem i32 %_50, 6
	store i32 %_51, i32* %_2
	store i32 2, i32* %_2
	%_54 = load i32, i32* %_2
	%_55 = icmp eq i32 %_54, 2
	br i1 %_55, label %Function_main_BasicBlock_52, label %Function_main_BasicBlock_53
Function_main_BasicBlock_45:
	store i32 5, i32* %_2
	br label %Function_main_BasicBlock_46
Function_main_BasicBlock_46:
	br label %Function_main_BasicBlock_41
	br label %Function_main_BasicBlock_40
Function_main_BasicBlock_52:
	store i32 3, i32* %_2
	store i32 4, i32* %_2
	br label %Function_main_BasicBlock_53
Function_main_BasicBlock_53:
	br label %Function_main_BasicBlock_56
Function_main_BasicBlock_56:
	%_60 = load i32, i32* %_2
	%_61 = icmp eq i32 %_60, 4
	br i1 %_61, label %Function_main_BasicBlock_57, label %Function_main_BasicBlock_59
Function_main_BasicBlock_57:
	%_62 = load i32, i32* %_2
	%_63 = add i32 %_62, 1
	store i32 %_63, i32* %_2
	br label %Function_main_BasicBlock_58
Function_main_BasicBlock_58:
	br label %Function_main_BasicBlock_56
Function_main_BasicBlock_59:
	%_67 = load i32, i32* %_2
	%_68 = icmp eq i32 %_67, 5
	br i1 %_68, label %Function_main_BasicBlock_66, label %Function_main_BasicBlock_65
Function_main_BasicBlock_64:
	store i32 6, i32* %_2
	br label %Function_main_BasicBlock_65
Function_main_BasicBlock_65:
	%_75 = load i32, i32* %_2
	%_76 = icmp ne i32 %_75, 6
	br i1 %_76, label %Function_main_BasicBlock_72, label %Function_main_BasicBlock_74
Function_main_BasicBlock_66:
	%_70 = load i32, i32* %_2
	%_71 = icmp eq i32 %_70, 4
	br i1 %_71, label %Function_main_BasicBlock_69, label %Function_main_BasicBlock_65
Function_main_BasicBlock_69:
	br label %Function_main_BasicBlock_64
Function_main_BasicBlock_72:
	%_79 = load i32, i32* @a0
	store i32 %_79, i32* %_2
	br label %Function_main_BasicBlock_73
Function_main_BasicBlock_73:
	%_80 = alloca [2 x i32]
	%_81 = alloca [2 x i32]
	%_82 = getelementptr [2 x i32], [2 x i32]* %_81, i32 0, i32 0
	store i32 1, i32* %_82
	%_83 = getelementptr [2 x i32], [2 x i32]* %_81, i32 0, i32 1
	store i32 2, i32* %_83
	%_84 = alloca [2 x [2 x i32]]
	%_85 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %_84, i32 0, i32 0
	%_86 = getelementptr [2 x i32], [2 x i32]* %_85, i32 0, i32 0
	store i32 1, i32* %_86
	%_87 = getelementptr [2 x i32], [2 x i32]* %_85, i32 0, i32 1
	store i32 2, i32* %_87
	%_88 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %_84, i32 0, i32 1
	%_89 = getelementptr [2 x i32], [2 x i32]* %_88, i32 0, i32 0
	store i32 3, i32* %_89
	%_90 = getelementptr [2 x i32], [2 x i32]* %_88, i32 0, i32 1
	store i32 4, i32* %_90
	%_91 = alloca [3 x i32]
	%_92 = getelementptr [3 x i32], [3 x i32]* %_91, i32 0, i32 0
	store i32 1, i32* %_92
	%_93 = getelementptr [3 x i32], [3 x i32]* %_91, i32 0, i32 1
	store i32 2, i32* %_93
	%_94 = getelementptr [3 x i32], [3 x i32]* %_91, i32 0, i32 2
	store i32 3, i32* %_94
	%_95 = alloca [2 x [2 x i32]]
	%_96 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %_95, i32 0, i32 0
	%_97 = getelementptr [2 x i32], [2 x i32]* %_96, i32 0, i32 0
	store i32 1, i32* %_97
	%_98 = getelementptr [2 x i32], [2 x i32]* %_96, i32 0, i32 1
	store i32 2, i32* %_98
	%_99 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %_95, i32 0, i32 1
	%_100 = getelementptr [2 x i32], [2 x i32]* %_99, i32 0, i32 0
	store i32 1, i32* %_100
	%_101 = getelementptr [2 x i32], [2 x i32]* %_99, i32 0, i32 1
	store i32 2, i32* %_101
	%_102 = alloca [2 x i32]
	%_103 = sdiv i32 2, 4
	%_104 = mul i32 %_103, 2
	%_105 = srem i32 %_104, 6
	%_106 = add i32 4, %_105
	%_107 = sub i32 %_106, 5
	%_108 = getelementptr [2 x i32], [2 x i32]* %_102, i32 0, i32 0
	store i32 %_107, i32* %_108
	%_109 = getelementptr [2 x i32], [2 x i32]* %_102, i32 0, i32 1
	store i32 9, i32* %_109
	%_110 = getelementptr [2 x i32], [2 x i32]* %_102, i32 0, i32 0
	%_111 = load i32, i32* %_2
	%_112 = call i32 @fd(i32 %_111)
	store i32 %_112, i32* %_110
	%_113 = getelementptr [2 x i32], [2 x i32]* %_102, i32 0, i32 1
	%_114 = getelementptr [2 x i32], [2 x i32]* %_102, i32 0, i32 1
	%_115 = load i32, i32* %_114
	%_116 = getelementptr [2 x i32], [2 x i32]* %_80, i32 0, i32 0
	%_117 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %_84, i32 0, i32 0
	%_118 = call i32 @fk(i32 %_115, i32* %_116, [2 x i32]* %_117)
	store i32 %_118, i32* %_113
	%_119 = alloca i32
	store i32 4, i32* %_119
	%_120 = call i32 @getint()
	store i32 %_120, i32* %_119
	call void @f()
	%_121 = getelementptr [2 x i32], [2 x i32]* %_102, i32 0, i32 1
	%_122 = load i32, i32* %_121
	%_123 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %_84, i32 0, i32 1
	%_124 = getelementptr [2 x i32], [2 x i32]* %_123, i32 0, i32 0
	%_125 = load i32, i32* %_124
	%_126 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %_95, i32 0, i32 1
	%_127 = getelementptr [2 x i32], [2 x i32]* %_126, i32 0, i32 1
	%_128 = load i32, i32* %_127
	call void @ff(i32 %_122, i32 %_125, i32 %_128)
	%_129 = load i32, i32* @a0
	%_130 = add i32 3, %_129
	%_131 = call i32 @fd(i32 %_130)
	store i32 %_131, i32* %_119
	ret i32 0
Function_main_BasicBlock_74:
	%_77 = load i32, i32* %_2
	%_78 = icmp eq i32 %_77, 3
	br i1 %_78, label %Function_main_BasicBlock_72, label %Function_main_BasicBlock_73
}
